Q. Time for a little quantum mechanics with Schrodingers's cat.

Suppose you have a cat in a closed box, along with a radioactive particle. The particle has exactly a 50% chance of fissioning into two. If it does, the cat will be killed. If it doesn't, the cat will be okay. So, is the cat dead or alive? According to Schrodinger, the correct answer is both (at least while the box remains closed). Every time a subnuclear reaction takes place that has two possible outcomes, the universe is cloned. In one, the event occured, in the other it didn't. The cat's alive in one universe, dead in another. Only when you open the box do you know which universe you are in.

No wonder coding for the future is difficult!

But think of code evolution along the same lines as a box full of Schrodinger's cats: every decision results in a different version of the future. How many possible futures can your code support? Which ones are more likely? How hard will it be to support them when the time comes?
Dare you open the box?

Answer.
First off, fucking hell! That's a lot of cats, and even a lot more dead cats!! 
How many can I support? Ideally, just the 1 but in reality it could be upto 10+ if not more

The reality with work is that code will be refactored and made more orthoginal, well in theory anyway. If that is the case, we will be fine for a lot of outcomes, but if not well then we are in for a bumpy ride!! With the refactoring happening, it will be somewhat easier at least, but support is always tough!
Will I open the box? No, fuck that!!
